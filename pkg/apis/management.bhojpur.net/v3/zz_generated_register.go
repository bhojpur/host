// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by main. DO NOT EDIT.

// +k8s:deepcopy-gen=package
// +groupName=management.bhojpur.net
package v3

import (
	management "github.com/bhojpur/host/pkg/apis/management.bhojpur.net"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/runtime/schema"
)

var (
	APIServiceResourceName                              = "apiservices"
	ActiveDirectoryProviderResourceName                 = "activedirectoryproviders"
	AuthConfigResourceName                              = "authconfigs"
	AuthProviderResourceName                            = "authproviders"
	AuthTokenResourceName                               = "authtokens"
	AzureADProviderResourceName                         = "azureadproviders"
	BkeAddonResourceName                                = "bkeaddons"
	BkeK8sServiceOptionResourceName                     = "bkek8sserviceoptions"
	BkeK8sSystemImageResourceName                       = "bkek8ssystemimages"
	CatalogResourceName                                 = "catalogs"
	CatalogTemplateResourceName                         = "catalogtemplates"
	CatalogTemplateVersionResourceName                  = "catalogtemplateversions"
	CisBenchmarkVersionResourceName                     = "cisbenchmarkversions"
	CisConfigResourceName                               = "cisconfigs"
	CloudCredentialResourceName                         = "cloudcredentials"
	ClusterResourceName                                 = "clusters"
	ClusterAlertResourceName                            = "clusteralerts"
	ClusterAlertGroupResourceName                       = "clusteralertgroups"
	ClusterAlertRuleResourceName                        = "clusteralertrules"
	ClusterCatalogResourceName                          = "clustercatalogs"
	ClusterLoggingResourceName                          = "clusterloggings"
	ClusterMonitorGraphResourceName                     = "clustermonitorgraphs"
	ClusterRegistrationTokenResourceName                = "clusterregistrationtokens"
	ClusterRoleTemplateBindingResourceName              = "clusterroletemplatebindings"
	ClusterScanResourceName                             = "clusterscans"
	ClusterTemplateResourceName                         = "clustertemplates"
	ClusterTemplateRevisionResourceName                 = "clustertemplaterevisions"
	ComposeConfigResourceName                           = "composeconfigs"
	ContainerDriverResourceName                         = "containerdrivers"
	DynamicSchemaResourceName                           = "dynamicschemas"
	EtcdBackupResourceName                              = "etcdbackups"
	FeatureResourceName                                 = "features"
	FleetWorkspaceResourceName                          = "fleetworkspaces"
	FreeIpaProviderResourceName                         = "freeipaproviders"
	GithubProviderResourceName                          = "githubproviders"
	GlobalDnsResourceName                               = "globaldnses"
	GlobalDnsProviderResourceName                       = "globaldnsproviders"
	GlobalRoleResourceName                              = "globalroles"
	GlobalRoleBindingResourceName                       = "globalrolebindings"
	GoogleOAuthProviderResourceName                     = "googleoauthproviders"
	GroupResourceName                                   = "groups"
	GroupMemberResourceName                             = "groupmembers"
	LocalProviderResourceName                           = "localproviders"
	ManagedChartResourceName                            = "managedcharts"
	MonitorMetricResourceName                           = "monitormetrics"
	MultiClusterAppResourceName                         = "multiclusterapps"
	MultiClusterAppRevisionResourceName                 = "multiclusterapprevisions"
	NodeResourceName                                    = "nodes"
	NodeDriverResourceName                              = "nodedrivers"
	NodePoolResourceName                                = "nodepools"
	NodeTemplateResourceName                            = "nodetemplates"
	NotifierResourceName                                = "notifiers"
	OIDCProviderResourceName                            = "oidcproviders"
	OpenLdapProviderResourceName                        = "openldapproviders"
	PodSecurityPolicyTemplateResourceName               = "podsecuritypolicytemplates"
	PodSecurityPolicyTemplateProjectBindingResourceName = "podsecuritypolicytemplateprojectbindings"
	PreferenceResourceName                              = "preferences"
	PrincipalResourceName                               = "principals"
	ProjectResourceName                                 = "projects"
	ProjectAlertResourceName                            = "projectalerts"
	ProjectAlertGroupResourceName                       = "projectalertgroups"
	ProjectAlertRuleResourceName                        = "projectalertrules"
	ProjectCatalogResourceName                          = "projectcatalogs"
	ProjectLoggingResourceName                          = "projectloggings"
	ProjectMonitorGraphResourceName                     = "projectmonitorgraphs"
	ProjectNetworkPolicyResourceName                    = "projectnetworkpolicies"
	ProjectRoleTemplateBindingResourceName              = "projectroletemplatebindings"
	RoleTemplateResourceName                            = "roletemplates"
	SamlProviderResourceName                            = "samlproviders"
	SamlTokenResourceName                               = "samltokens"
	SettingResourceName                                 = "settings"
	TemplateResourceName                                = "templates"
	TemplateContentResourceName                         = "templatecontents"
	TemplateVersionResourceName                         = "templateversions"
	TokenResourceName                                   = "tokens"
	UserResourceName                                    = "users"
	UserAttributeResourceName                           = "userattributes"
)

// SchemeGroupVersion is group version used to register these objects
var SchemeGroupVersion = schema.GroupVersion{Group: management.GroupName, Version: "v3"}

// Kind takes an unqualified kind and returns back a Group qualified GroupKind
func Kind(kind string) schema.GroupKind {
	return SchemeGroupVersion.WithKind(kind).GroupKind()
}

// Resource takes an unqualified resource and returns a Group qualified GroupResource
func Resource(resource string) schema.GroupResource {
	return SchemeGroupVersion.WithResource(resource).GroupResource()
}

var (
	SchemeBuilder = runtime.NewSchemeBuilder(addKnownTypes)
	AddToScheme   = SchemeBuilder.AddToScheme
)

// Adds the list of known types to Scheme.
func addKnownTypes(scheme *runtime.Scheme) error {
	scheme.AddKnownTypes(SchemeGroupVersion,
		&APIService{},
		&APIServiceList{},
		&ActiveDirectoryProvider{},
		&ActiveDirectoryProviderList{},
		&AuthConfig{},
		&AuthConfigList{},
		&AuthProvider{},
		&AuthProviderList{},
		&AuthToken{},
		&AuthTokenList{},
		&AzureADProvider{},
		&AzureADProviderList{},
		&BkeAddon{},
		&BkeAddonList{},
		&BkeK8sServiceOption{},
		&BkeK8sServiceOptionList{},
		&BkeK8sSystemImage{},
		&BkeK8sSystemImageList{},
		&Catalog{},
		&CatalogList{},
		&CatalogTemplate{},
		&CatalogTemplateList{},
		&CatalogTemplateVersion{},
		&CatalogTemplateVersionList{},
		&CisBenchmarkVersion{},
		&CisBenchmarkVersionList{},
		&CisConfig{},
		&CisConfigList{},
		&CloudCredential{},
		&CloudCredentialList{},
		&Cluster{},
		&ClusterList{},
		&ClusterAlert{},
		&ClusterAlertList{},
		&ClusterAlertGroup{},
		&ClusterAlertGroupList{},
		&ClusterAlertRule{},
		&ClusterAlertRuleList{},
		&ClusterCatalog{},
		&ClusterCatalogList{},
		&ClusterLogging{},
		&ClusterLoggingList{},
		&ClusterMonitorGraph{},
		&ClusterMonitorGraphList{},
		&ClusterRegistrationToken{},
		&ClusterRegistrationTokenList{},
		&ClusterRoleTemplateBinding{},
		&ClusterRoleTemplateBindingList{},
		&ClusterScan{},
		&ClusterScanList{},
		&ClusterTemplate{},
		&ClusterTemplateList{},
		&ClusterTemplateRevision{},
		&ClusterTemplateRevisionList{},
		&ComposeConfig{},
		&ComposeConfigList{},
		&ContainerDriver{},
		&ContainerDriverList{},
		&DynamicSchema{},
		&DynamicSchemaList{},
		&EtcdBackup{},
		&EtcdBackupList{},
		&Feature{},
		&FeatureList{},
		&FleetWorkspace{},
		&FleetWorkspaceList{},
		&FreeIpaProvider{},
		&FreeIpaProviderList{},
		&GithubProvider{},
		&GithubProviderList{},
		&GlobalDns{},
		&GlobalDnsList{},
		&GlobalDnsProvider{},
		&GlobalDnsProviderList{},
		&GlobalRole{},
		&GlobalRoleList{},
		&GlobalRoleBinding{},
		&GlobalRoleBindingList{},
		&GoogleOAuthProvider{},
		&GoogleOAuthProviderList{},
		&Group{},
		&GroupList{},
		&GroupMember{},
		&GroupMemberList{},
		&LocalProvider{},
		&LocalProviderList{},
		&ManagedChart{},
		&ManagedChartList{},
		&MonitorMetric{},
		&MonitorMetricList{},
		&MultiClusterApp{},
		&MultiClusterAppList{},
		&MultiClusterAppRevision{},
		&MultiClusterAppRevisionList{},
		&Node{},
		&NodeList{},
		&NodeDriver{},
		&NodeDriverList{},
		&NodePool{},
		&NodePoolList{},
		&NodeTemplate{},
		&NodeTemplateList{},
		&Notifier{},
		&NotifierList{},
		&OIDCProvider{},
		&OIDCProviderList{},
		&OpenLdapProvider{},
		&OpenLdapProviderList{},
		&PodSecurityPolicyTemplate{},
		&PodSecurityPolicyTemplateList{},
		&PodSecurityPolicyTemplateProjectBinding{},
		&PodSecurityPolicyTemplateProjectBindingList{},
		&Preference{},
		&PreferenceList{},
		&Principal{},
		&PrincipalList{},
		&Project{},
		&ProjectList{},
		&ProjectAlert{},
		&ProjectAlertList{},
		&ProjectAlertGroup{},
		&ProjectAlertGroupList{},
		&ProjectAlertRule{},
		&ProjectAlertRuleList{},
		&ProjectCatalog{},
		&ProjectCatalogList{},
		&ProjectLogging{},
		&ProjectLoggingList{},
		&ProjectMonitorGraph{},
		&ProjectMonitorGraphList{},
		&ProjectNetworkPolicy{},
		&ProjectNetworkPolicyList{},
		&ProjectRoleTemplateBinding{},
		&ProjectRoleTemplateBindingList{},
		&RoleTemplate{},
		&RoleTemplateList{},
		&SamlProvider{},
		&SamlProviderList{},
		&SamlToken{},
		&SamlTokenList{},
		&Setting{},
		&SettingList{},
		&Template{},
		&TemplateList{},
		&TemplateContent{},
		&TemplateContentList{},
		&TemplateVersion{},
		&TemplateVersionList{},
		&Token{},
		&TokenList{},
		&User{},
		&UserList{},
		&UserAttribute{},
		&UserAttributeList{},
	)
	metav1.AddToGroupVersion(scheme, SchemeGroupVersion)
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bhojpur/host/pkg/machine/models"
)

// ServiceCreateCreatedCode is the HTTP code returned for type ServiceCreateCreated
const ServiceCreateCreatedCode int = 201

/*ServiceCreateCreated no error

swagger:response serviceCreateCreated
*/
type ServiceCreateCreated struct {

	/*
	  In: Body
	*/
	Payload *ServiceCreateCreatedBody `json:"body,omitempty"`
}

// NewServiceCreateCreated creates ServiceCreateCreated with default headers values
func NewServiceCreateCreated() *ServiceCreateCreated {

	return &ServiceCreateCreated{}
}

// WithPayload adds the payload to the service create created response
func (o *ServiceCreateCreated) WithPayload(payload *ServiceCreateCreatedBody) *ServiceCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service create created response
func (o *ServiceCreateCreated) SetPayload(payload *ServiceCreateCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceCreateBadRequestCode is the HTTP code returned for type ServiceCreateBadRequest
const ServiceCreateBadRequestCode int = 400

/*ServiceCreateBadRequest bad parameter

swagger:response serviceCreateBadRequest
*/
type ServiceCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceCreateBadRequest creates ServiceCreateBadRequest with default headers values
func NewServiceCreateBadRequest() *ServiceCreateBadRequest {

	return &ServiceCreateBadRequest{}
}

// WithPayload adds the payload to the service create bad request response
func (o *ServiceCreateBadRequest) WithPayload(payload *models.ErrorResponse) *ServiceCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service create bad request response
func (o *ServiceCreateBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceCreateForbiddenCode is the HTTP code returned for type ServiceCreateForbidden
const ServiceCreateForbiddenCode int = 403

/*ServiceCreateForbidden network is not eligible for services

swagger:response serviceCreateForbidden
*/
type ServiceCreateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceCreateForbidden creates ServiceCreateForbidden with default headers values
func NewServiceCreateForbidden() *ServiceCreateForbidden {

	return &ServiceCreateForbidden{}
}

// WithPayload adds the payload to the service create forbidden response
func (o *ServiceCreateForbidden) WithPayload(payload *models.ErrorResponse) *ServiceCreateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service create forbidden response
func (o *ServiceCreateForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceCreateConflictCode is the HTTP code returned for type ServiceCreateConflict
const ServiceCreateConflictCode int = 409

/*ServiceCreateConflict name conflicts with an existing service

swagger:response serviceCreateConflict
*/
type ServiceCreateConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceCreateConflict creates ServiceCreateConflict with default headers values
func NewServiceCreateConflict() *ServiceCreateConflict {

	return &ServiceCreateConflict{}
}

// WithPayload adds the payload to the service create conflict response
func (o *ServiceCreateConflict) WithPayload(payload *models.ErrorResponse) *ServiceCreateConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service create conflict response
func (o *ServiceCreateConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceCreateConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceCreateInternalServerErrorCode is the HTTP code returned for type ServiceCreateInternalServerError
const ServiceCreateInternalServerErrorCode int = 500

/*ServiceCreateInternalServerError server error

swagger:response serviceCreateInternalServerError
*/
type ServiceCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceCreateInternalServerError creates ServiceCreateInternalServerError with default headers values
func NewServiceCreateInternalServerError() *ServiceCreateInternalServerError {

	return &ServiceCreateInternalServerError{}
}

// WithPayload adds the payload to the service create internal server error response
func (o *ServiceCreateInternalServerError) WithPayload(payload *models.ErrorResponse) *ServiceCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service create internal server error response
func (o *ServiceCreateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceCreateServiceUnavailableCode is the HTTP code returned for type ServiceCreateServiceUnavailable
const ServiceCreateServiceUnavailableCode int = 503

/*ServiceCreateServiceUnavailable node is not part of a swarm

swagger:response serviceCreateServiceUnavailable
*/
type ServiceCreateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewServiceCreateServiceUnavailable creates ServiceCreateServiceUnavailable with default headers values
func NewServiceCreateServiceUnavailable() *ServiceCreateServiceUnavailable {

	return &ServiceCreateServiceUnavailable{}
}

// WithPayload adds the payload to the service create service unavailable response
func (o *ServiceCreateServiceUnavailable) WithPayload(payload *models.ErrorResponse) *ServiceCreateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service create service unavailable response
func (o *ServiceCreateServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceCreateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

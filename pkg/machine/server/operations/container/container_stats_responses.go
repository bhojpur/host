// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bhojpur/host/pkg/machine/models"
)

// ContainerStatsOKCode is the HTTP code returned for type ContainerStatsOK
const ContainerStatsOKCode int = 200

/*ContainerStatsOK no error

swagger:response containerStatsOK
*/
type ContainerStatsOK struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewContainerStatsOK creates ContainerStatsOK with default headers values
func NewContainerStatsOK() *ContainerStatsOK {

	return &ContainerStatsOK{}
}

// WithPayload adds the payload to the container stats o k response
func (o *ContainerStatsOK) WithPayload(payload interface{}) *ContainerStatsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container stats o k response
func (o *ContainerStatsOK) SetPayload(payload interface{}) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerStatsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ContainerStatsNotFoundCode is the HTTP code returned for type ContainerStatsNotFound
const ContainerStatsNotFoundCode int = 404

/*ContainerStatsNotFound no such container

swagger:response containerStatsNotFound
*/
type ContainerStatsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerStatsNotFound creates ContainerStatsNotFound with default headers values
func NewContainerStatsNotFound() *ContainerStatsNotFound {

	return &ContainerStatsNotFound{}
}

// WithPayload adds the payload to the container stats not found response
func (o *ContainerStatsNotFound) WithPayload(payload *models.ErrorResponse) *ContainerStatsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container stats not found response
func (o *ContainerStatsNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerStatsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerStatsInternalServerErrorCode is the HTTP code returned for type ContainerStatsInternalServerError
const ContainerStatsInternalServerErrorCode int = 500

/*ContainerStatsInternalServerError server error

swagger:response containerStatsInternalServerError
*/
type ContainerStatsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerStatsInternalServerError creates ContainerStatsInternalServerError with default headers values
func NewContainerStatsInternalServerError() *ContainerStatsInternalServerError {

	return &ContainerStatsInternalServerError{}
}

// WithPayload adds the payload to the container stats internal server error response
func (o *ContainerStatsInternalServerError) WithPayload(payload *models.ErrorResponse) *ContainerStatsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container stats internal server error response
func (o *ContainerStatsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerStatsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

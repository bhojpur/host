// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bhojpur/host/pkg/machine/models"
)

// ContainerCreateCreatedCode is the HTTP code returned for type ContainerCreateCreated
const ContainerCreateCreatedCode int = 201

/*ContainerCreateCreated Container created successfully

swagger:response containerCreateCreated
*/
type ContainerCreateCreated struct {

	/*
	  In: Body
	*/
	Payload *ContainerCreateCreatedBody `json:"body,omitempty"`
}

// NewContainerCreateCreated creates ContainerCreateCreated with default headers values
func NewContainerCreateCreated() *ContainerCreateCreated {

	return &ContainerCreateCreated{}
}

// WithPayload adds the payload to the container create created response
func (o *ContainerCreateCreated) WithPayload(payload *ContainerCreateCreatedBody) *ContainerCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container create created response
func (o *ContainerCreateCreated) SetPayload(payload *ContainerCreateCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerCreateBadRequestCode is the HTTP code returned for type ContainerCreateBadRequest
const ContainerCreateBadRequestCode int = 400

/*ContainerCreateBadRequest bad parameter

swagger:response containerCreateBadRequest
*/
type ContainerCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerCreateBadRequest creates ContainerCreateBadRequest with default headers values
func NewContainerCreateBadRequest() *ContainerCreateBadRequest {

	return &ContainerCreateBadRequest{}
}

// WithPayload adds the payload to the container create bad request response
func (o *ContainerCreateBadRequest) WithPayload(payload *models.ErrorResponse) *ContainerCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container create bad request response
func (o *ContainerCreateBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerCreateNotFoundCode is the HTTP code returned for type ContainerCreateNotFound
const ContainerCreateNotFoundCode int = 404

/*ContainerCreateNotFound no such image

swagger:response containerCreateNotFound
*/
type ContainerCreateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerCreateNotFound creates ContainerCreateNotFound with default headers values
func NewContainerCreateNotFound() *ContainerCreateNotFound {

	return &ContainerCreateNotFound{}
}

// WithPayload adds the payload to the container create not found response
func (o *ContainerCreateNotFound) WithPayload(payload *models.ErrorResponse) *ContainerCreateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container create not found response
func (o *ContainerCreateNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerCreateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerCreateConflictCode is the HTTP code returned for type ContainerCreateConflict
const ContainerCreateConflictCode int = 409

/*ContainerCreateConflict conflict

swagger:response containerCreateConflict
*/
type ContainerCreateConflict struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerCreateConflict creates ContainerCreateConflict with default headers values
func NewContainerCreateConflict() *ContainerCreateConflict {

	return &ContainerCreateConflict{}
}

// WithPayload adds the payload to the container create conflict response
func (o *ContainerCreateConflict) WithPayload(payload *models.ErrorResponse) *ContainerCreateConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container create conflict response
func (o *ContainerCreateConflict) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerCreateConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerCreateInternalServerErrorCode is the HTTP code returned for type ContainerCreateInternalServerError
const ContainerCreateInternalServerErrorCode int = 500

/*ContainerCreateInternalServerError server error

swagger:response containerCreateInternalServerError
*/
type ContainerCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerCreateInternalServerError creates ContainerCreateInternalServerError with default headers values
func NewContainerCreateInternalServerError() *ContainerCreateInternalServerError {

	return &ContainerCreateInternalServerError{}
}

// WithPayload adds the payload to the container create internal server error response
func (o *ContainerCreateInternalServerError) WithPayload(payload *models.ErrorResponse) *ContainerCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container create internal server error response
func (o *ContainerCreateInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bhojpur/host/pkg/machine/models"
)

// ContainerLogsOKCode is the HTTP code returned for type ContainerLogsOK
const ContainerLogsOKCode int = 200

/*ContainerLogsOK logs returned as a stream in response body.
For the stream format, [see the documentation for the attach endpoint](#operation/ContainerAttach).
Note that unlike the attach endpoint, the logs endpoint does not
upgrade the connection and does not set Content-Type.


swagger:response containerLogsOK
*/
type ContainerLogsOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewContainerLogsOK creates ContainerLogsOK with default headers values
func NewContainerLogsOK() *ContainerLogsOK {

	return &ContainerLogsOK{}
}

// WithPayload adds the payload to the container logs o k response
func (o *ContainerLogsOK) WithPayload(payload io.ReadCloser) *ContainerLogsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container logs o k response
func (o *ContainerLogsOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerLogsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ContainerLogsNotFoundCode is the HTTP code returned for type ContainerLogsNotFound
const ContainerLogsNotFoundCode int = 404

/*ContainerLogsNotFound no such container

swagger:response containerLogsNotFound
*/
type ContainerLogsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerLogsNotFound creates ContainerLogsNotFound with default headers values
func NewContainerLogsNotFound() *ContainerLogsNotFound {

	return &ContainerLogsNotFound{}
}

// WithPayload adds the payload to the container logs not found response
func (o *ContainerLogsNotFound) WithPayload(payload *models.ErrorResponse) *ContainerLogsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container logs not found response
func (o *ContainerLogsNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerLogsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ContainerLogsInternalServerErrorCode is the HTTP code returned for type ContainerLogsInternalServerError
const ContainerLogsInternalServerErrorCode int = 500

/*ContainerLogsInternalServerError server error

swagger:response containerLogsInternalServerError
*/
type ContainerLogsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewContainerLogsInternalServerError creates ContainerLogsInternalServerError with default headers values
func NewContainerLogsInternalServerError() *ContainerLogsInternalServerError {

	return &ContainerLogsInternalServerError{}
}

// WithPayload adds the payload to the container logs internal server error response
func (o *ContainerLogsInternalServerError) WithPayload(payload *models.ErrorResponse) *ContainerLogsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the container logs internal server error response
func (o *ContainerLogsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ContainerLogsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package task

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bhojpur/host/pkg/machine/models"
)

// TaskListOKCode is the HTTP code returned for type TaskListOK
const TaskListOKCode int = 200

/*TaskListOK no error

swagger:response taskListOK
*/
type TaskListOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Task `json:"body,omitempty"`
}

// NewTaskListOK creates TaskListOK with default headers values
func NewTaskListOK() *TaskListOK {

	return &TaskListOK{}
}

// WithPayload adds the payload to the task list o k response
func (o *TaskListOK) WithPayload(payload []*models.Task) *TaskListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the task list o k response
func (o *TaskListOK) SetPayload(payload []*models.Task) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TaskListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Task, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// TaskListInternalServerErrorCode is the HTTP code returned for type TaskListInternalServerError
const TaskListInternalServerErrorCode int = 500

/*TaskListInternalServerError server error

swagger:response taskListInternalServerError
*/
type TaskListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewTaskListInternalServerError creates TaskListInternalServerError with default headers values
func NewTaskListInternalServerError() *TaskListInternalServerError {

	return &TaskListInternalServerError{}
}

// WithPayload adds the payload to the task list internal server error response
func (o *TaskListInternalServerError) WithPayload(payload *models.ErrorResponse) *TaskListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the task list internal server error response
func (o *TaskListInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TaskListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// TaskListServiceUnavailableCode is the HTTP code returned for type TaskListServiceUnavailable
const TaskListServiceUnavailableCode int = 503

/*TaskListServiceUnavailable node is not part of a swarm

swagger:response taskListServiceUnavailable
*/
type TaskListServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewTaskListServiceUnavailable creates TaskListServiceUnavailable with default headers values
func NewTaskListServiceUnavailable() *TaskListServiceUnavailable {

	return &TaskListServiceUnavailable{}
}

// WithPayload adds the payload to the task list service unavailable response
func (o *TaskListServiceUnavailable) WithPayload(payload *models.ErrorResponse) *TaskListServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the task list service unavailable response
func (o *TaskListServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TaskListServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

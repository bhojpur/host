// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

package swarm

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/bhojpur/host/pkg/machine/models"
)

// SwarmJoinOKCode is the HTTP code returned for type SwarmJoinOK
const SwarmJoinOKCode int = 200

/*SwarmJoinOK no error

swagger:response swarmJoinOK
*/
type SwarmJoinOK struct {
}

// NewSwarmJoinOK creates SwarmJoinOK with default headers values
func NewSwarmJoinOK() *SwarmJoinOK {

	return &SwarmJoinOK{}
}

// WriteResponse to the client
func (o *SwarmJoinOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SwarmJoinBadRequestCode is the HTTP code returned for type SwarmJoinBadRequest
const SwarmJoinBadRequestCode int = 400

/*SwarmJoinBadRequest bad parameter

swagger:response swarmJoinBadRequest
*/
type SwarmJoinBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSwarmJoinBadRequest creates SwarmJoinBadRequest with default headers values
func NewSwarmJoinBadRequest() *SwarmJoinBadRequest {

	return &SwarmJoinBadRequest{}
}

// WithPayload adds the payload to the swarm join bad request response
func (o *SwarmJoinBadRequest) WithPayload(payload *models.ErrorResponse) *SwarmJoinBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the swarm join bad request response
func (o *SwarmJoinBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SwarmJoinBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SwarmJoinInternalServerErrorCode is the HTTP code returned for type SwarmJoinInternalServerError
const SwarmJoinInternalServerErrorCode int = 500

/*SwarmJoinInternalServerError server error

swagger:response swarmJoinInternalServerError
*/
type SwarmJoinInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSwarmJoinInternalServerError creates SwarmJoinInternalServerError with default headers values
func NewSwarmJoinInternalServerError() *SwarmJoinInternalServerError {

	return &SwarmJoinInternalServerError{}
}

// WithPayload adds the payload to the swarm join internal server error response
func (o *SwarmJoinInternalServerError) WithPayload(payload *models.ErrorResponse) *SwarmJoinInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the swarm join internal server error response
func (o *SwarmJoinInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SwarmJoinInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SwarmJoinServiceUnavailableCode is the HTTP code returned for type SwarmJoinServiceUnavailable
const SwarmJoinServiceUnavailableCode int = 503

/*SwarmJoinServiceUnavailable node is already part of a swarm

swagger:response swarmJoinServiceUnavailable
*/
type SwarmJoinServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSwarmJoinServiceUnavailable creates SwarmJoinServiceUnavailable with default headers values
func NewSwarmJoinServiceUnavailable() *SwarmJoinServiceUnavailable {

	return &SwarmJoinServiceUnavailable{}
}

// WithPayload adds the payload to the swarm join service unavailable response
func (o *SwarmJoinServiceUnavailable) WithPayload(payload *models.ErrorResponse) *SwarmJoinServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the swarm join service unavailable response
func (o *SwarmJoinServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SwarmJoinServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

#!/bin/bash

# Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

set -ex

cd $(dirname $0)/..

. ./scripts/version

mkdir -p ./bin

if [ "$CROSS" = 1 ]; then
    echo "Cross compiling Bhojpur Host machine"
    CGO_ENABLED=0 GOOS=darwin go build -ldflags "-X main.VERSION=$VERSION"  -o ./bin/hostutl-Darwin-x86_64 ./cmd/machine/main.go
    CGO_ENABLED=0 GOOS=windows go build -ldflags "-X main.VERSION=$VERSION" -o ./bin/hostutl-Windows-x86_64.exe ./cmd//main.go
    CGO_ENABLED=0 GOARCH=arm64 go build -a -tags netgo -installsuffix netgo -ldflags "-X main.VERSION=$VERSION" -o ./bin/hostutl-Linux-arm64 ./cmd/machine/main.go
    CGO_ENABLED=0 GOARCH=ppc64le go build -a -tags netgo -installsuffix netgo -ldflags "-X main.VERSION=$VERSION" -o ./bin/hostutl-Linux-ppc64le ./cmd/machine/main.go
    CGO_ENABLED=0 GOARCH=s390x go build -a -tags netgo -installsuffix netgo -ldflags "-X main.VERSION=$VERSION" -o ./bin/hostutl-Linux-s390x ./cmd/machine/main.go
    CGO_ENABLED=0 GOARCH=arm GOARM=6 go build -a -tags netgo -installsuffix netgo -ldflags "-X main.VERSION=$VERSION" -o ./bin/hostutl-Linux-arm ./cmd/machine/main.go
    CGO_ENABLED=0 GOARCH=arm GOARM=6 go build -a -tags netgo -installsuffix netgo -ldflags "-X main.VERSION=$VERSION" -o ./bin/hostutl-Linux-armv6l ./cmd/machine/main.go
    CGO_ENABLED=0 GOARCH=arm GOARM=7 go build -a -tags netgo -installsuffix netgo -ldflags "-X main.VERSION=$VERSION" -o ./bin/hostutl-Linux-armv7l ./cmd/machine/main.go
    CGO_ENABLED=0 GOARCH=amd64 go build -a -tags netgo -installsuffix netgo -ldflags "-X main.VERSION=$VERSION -extldflags '-static -s'" -o ./bin/hostutl-Linux-x86_64 ./cmd/machine/main.go
    cp ./bin/hostutl-Linux-arm64 ./bin/hostutl-Linux-aarch64

    cp ./bin/hostutl-$(uname -s)-$(uname -m) ./bin/hostutl
    echo Built ./bin/hostutl-$(uname -s)-$(uname -m)
else
    echo "Compiling Bhojpur Host machine"
    CGO_ENABLED=0 go build -a -tags netgo -installsuffix netgo \
        -ldflags "-w -s -extldflags '-static'
         -X github.com/bhojpur/host/pkg/version.Version=$VERSION
         -X github.com/bhojput/host/pkg/version.GitCommit=$COMMIT" \
        -o ./bin/hostutl ./cmd/machine/main.go
    echo "Checking compiled Bhojpur Host machine"
    ./bin/hostutl --version
fi

declare -A OS_ARCH_ARG

OS_PLATFORM_ARG=(linux darwin)
OS_ARCH_ARG[linux]="amd64 arm"
OS_ARCH_ARG[windows]="386 amd64"
OS_ARCH_ARG[darwin]="amd64"

CGO_ENABLED=0 go build -ldflags="-w -s -X main.VERSION=$VERSION -linkmode external -extldflags -static" -o bin/hostfarm

if [ -n "$CROSS" ]; then
    echo "Cross compiling Bhojpur Host cluster"
    rm -rf build/bin
    mkdir -p build/bin
    for OS in ${OS_PLATFORM_ARG[@]}; do
        for ARCH in ${OS_ARCH_ARG[${OS}]}; do
            OUTPUT_BIN="build/bin/hostfarm_$OS-$ARCH"
            if test "$OS" = "windows"; then
                OUTPUT_BIN="${OUTPUT_BIN}.exe"
            fi
            echo "Building binary for $OS/$ARCH..."
            GOARCH=$ARCH GOOS=$OS CGO_ENABLED=0 go build \
                  -ldflags="-w -X main.VERSION=$VERSION" \
                  -o ${OUTPUT_BIN} ./cmd/cluster/main.go
        done
    done
fi